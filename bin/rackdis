#!/usr/bin/env ruby

require 'rackdis'
require 'rack'
require 'slop'

opts = Slop.new help: true, strict: true, indent: 2 do
  banner "Usage: rackdis [options]"
  
  on :r, :redis=,     "The redis server location (127.0.0.1, :6379, 127.0.0.1:6379)"
  on :c, :config=,    "Config file to load options from"
  on :p, :port=,      "Port for rackdis to bind to"
  on :a, :address=,   "Address for rackdis to bind to"
  on :d, :daemonize,  "Put rackdis in the background"
  on :log_level=,     "Log level (shutup, error, warn, debug, info)"
  on :l, :log=,       "Log location (- or stdout for stdout, stderr)"
  on :db=,            "The redis db to use (a number 0 through 16)"
  on :allow_unsafe,   "Enable unsafe commands (things like flushdb) !CAREFUL!"
  on :force_enable=,  "Comma separated list of commands to enable !CAREFUL!", as: Array
  on :allow_batching, "Allows batching of commands through a POST request"
end

# Show any errors with the given options
begin
  opts.parse!
  Rackdis.configure(opts.to_hash)
rescue Slop::Error, ArgumentError => e
  puts "ERROR: #{e.message}"
  puts opts
  abort
end

app = Rack::Builder.new do
  use Rack::Stream
  use Rack::Cors do
    allow do
      origins '*'
      resource '*', headers: :any, methods: :get
    end
  end
  run Rackdis::API.new
end

Rack::Handler::Thin.run(app, Rackdis.rack_options)